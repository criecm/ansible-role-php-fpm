# all vars are defined by hand or defaulted by vars/app.yml
---

- name: site vars
  include_vars: phpsite.yml

- name: facts site onesite
  set_fact:
    site: '{{ default_fpm_site | combine(phpsite) }}'
    onesite: '{{ default_fpm_site | combine(phpsite) }}'

- name: group
  group:
    name: '{{ site.group }}'
    gid: '{{ site.uid | default(omit) }}'
    state: present

- name: site user
  user:
    name: '{{ site.user }}'
    uid: '{{ site.uid | default(omit) }}'
    shell: '{{ site.usershell }}'
    comment: 'php-fpm {{ site.user }}'
    home: '{{ site.userhome }}'
    create_home: no
    group: '{{ site.group }}'
    login_class: daemon
    state: present
  when: not site.otherphpbackend and site.user is not match(site.maintainer)

- name: maintenance user
  user:
    name: '{{ site.maintainer }}'
    shell: /bin/sh
    home: '{{ site.home }}'
    comment: 'real user for php {{ site.user }}'
    create_home: yes
    password: '{{ site.maintainer_pass | default(omit) }}'
    update_password: on_create
    group: '{{ site.group }}'
  when: not site.otherphpbackend and site.maintainer != ""

- name: maintenance ssh keys
  authorized_key:
    key: '{{ item }}'
    user: '{{ site.maintainer }}'
  with_items: '{{ site.maintainer_ssh_keys | default([]) }}'
  when: not site.otherphpbackend

- name: mkdirs
  file:
    path: '{{ item }}'
    state: directory
    owner: '{{ site.maintainer }}'
    group: '{{ site.group }}'
    mode: '2770'
  with_items:
    - '{{ site.sessions_path }}'
    - '{{ site.tmp_dir }}'
    - '{{ site.upload_dir }}'
  when: not site.otherphpbackend and item is match("^/.*")

- name: site cron(s)
  cron:
    job: '{{ cron.job | default(omit) }}'
    minute: '{{ cron.minute | default(omit) }}'
    hour: '{{ cron.hour | default(omit) }}'
    day: '{{ cron.day | default(omit) }}'
    env: '{{ cron.env | default(omit) }}'
    month: '{{ cron.month | default(omit) }}'
    special_time: '{{ cron.special_time | default(omit) }}'
    user: '{{ cron.user | default(omit) }}'
    weekday: '{{ cron.weekday | default(omit) }}'
    name: '{{ cron.name | default(omit) }}'
    state: '{{ cron.state | default("present") }}'
  with_items: '{{ site.crons }}'
  loop_control:
    loop_var: cron
  tags: crons

- name: phpapp git code
  git:
    dest: '{{ item.dest | default(site.rootdir) | regex_replace("^([^/])",site.home+"/\1") }}'
    repo: '{{ item.repo }}'
    umask: '{{ item.umask | default("0022") }}'
    version: '{{ item.version | default("master") }}'
    accept_hostkey: yes
    update: '{{ item.maj | default(git_update) }}'
    force: '{{ item.force | default(git_force) }}'
  with_items: '{{ site.gits }}'
  when: '"gits" in site'
  become: yes
  become_user: '{{ site.maintainer }}'
  become_method: su
  register: fpmgitdirs

- name: chown git code
  file:
    state: directory
    path: '{{ item.dest | default(site.rootdir) | regex_replace("^([^/])",site.home+"/\1") }}'
    recurse: yes
    owner: '{{ item.owner | default(site.maintainer) }}'
    group: '{{ item.group | default(site.group) }}'
    mode: '{{ item.mode | default("u=rwX,g=rX,o-w") }}'
  with_items: '{{ site.gits }}'
  when: '"gits" in site and fpmgitdirs.changed'

- name: chown rootdir to maintainer
  file:
    path: '{{ site.rootdir }}'
    state: directory
    owner: '{{ site.maintainer }}'
    group: '{{ site.group }}'
    mode: '0755'
  when: not site.otherphpbackend

- name: phpapp config dir(s)
  file:
    state: directory
    path: '{{ item.dest | regex_replace("^([^/])",site.rootdir+"/\1") | regex_replace("/[^/]+$","") }}'
    mode: '0751'
    owner: '{{ item.owner | default(site.maintainer) }}'
    group: '{{ item.group | default(site.group) }}'
  with_items: '{{ site.configfiles }}'
  when: '"configfiles" in site'

- name: phpapp config files
  template:
    src: '{{ item.src }}'
    dest: '{{ item.dest | regex_replace("^([^/])",site.rootdir+"/\1") }}'
    mode: '{{ item.mode | default("0640") }}'
    owner: '{{ item.owner | default(site.maintainer) }}'
    group: '{{ item.group | default(site.group) }}'
    backup: yes
    force: '{{ force_write_config | default(False) }}'
  with_items: '{{ site.configfiles }}'
  when: '"configfiles" in site'

- name: site config
  template:
    src: fpm-site.conf.j2
    dest: '{{ fpm_pools_dir }}/{{ site.id }}.conf'
  notify: reload fpm
  when: not site.otherphpbackend

- name: nginx config
  include_role:
    name: criecm.nginx
    tasks_from: vhost.yml
  vars:
    vhost: '{{ site }}'
  when: 'site.webserver_role == "criecm.nginx"'

- name: apache config
  include_role:
    name: criecm.apache
    tasks_from: vhost.yml
  vars:
    vhost: '{{ site }}'
  when: 'site.webserver_role == "criecm.apache"'

