---
- name: get php version
  shell: "php -v | awk '/^PHP/{gsub(\".[0-9]+$\",\"\",$2);print $2}'"
  register: get_php_version
  ignore_errors: yes
  changed_when: False
  check_mode: False

- name: set php version
  set_fact:
    php_version: '{{ get_php_version.stdout_lines[0] | regex_replace("^PHP ([0-9]+\.[0-9]+)\..*$","\1") }}'
  when: not get_php_version.failed and php_upgrade

- name: show php version
  debug:
    var: php_version

- name: OS vars
  include_vars: '{{ item }}'
  with_first_found:
    - files:
      - '{{ ansible_os_family }}-{{ ansible_distribution_major_version }}.yml'
      - '{{ ansible_os_family }}.yml'
  tags: vars, phpfpm

- name: OS tasks
  include_tasks: '{{ ansible_distribution }}.yml'
  tags: phpfpm, pkg

- name: config files
  block:
    - name: php-fpm.conf
      template:
        src: php-fpm.conf.j2
        dest: '{{ fpm_conf }}'
    - name: php.ini
      lineinfile:
        dest: '{{ phpinidest }}'
        line: '{{ phpini.key }}={{ phpini.value }}'
        regexp: '^{{ phpini.key }} *='
        insertafter: ';?{{ phpini.key }}'
      with_dict: '{{ php_ini_vars }}'
      when: php_ini_vars
      loop_control:
        loop_var: phpini
    - name: php-cli.ini
      lineinfile:
        dest: '{{ phpiniclidest }}'
        line: '{{ phpini.key }}={{ phpini.value }}'
        regexp: '^{{ phpini.key }} *='
        insertafter: '{{ phpini.key }}'
      with_dict: '{{ php_ini_vars | combine(php_cli_vars) }}'
      when: php_ini_vars
      loop_control:
        loop_var: phpini
    - name: php-fpm.ini
      lineinfile:
        dest: '{{ phpinifpmdest }}'
        line: '{{ phpini.key }}={{ phpini.value }}'
        regexp: '^{{ phpini.key }} *='
        insertafter: '{{ phpini.key }}'
      with_dict: '{{ php_ini_vars }}'
      when: php_ini_vars and phpinifpmdest | default(False)
      loop_control:
        loop_var: phpini
  tags: phpfpm, config

- name: mkdir php-fpm.d
  file:
    path: '{{ fpm_pools_dir }}'
    state: directory
  tags: phpfpm, config

- name: php-fpm sites
  include_tasks: 'phpapp.yml'
  with_items: '{{ sites }}'
  loop_control:
    loop_var: phpsite
  when: '"backend" in phpsite and phpsite.backend == "php-fpm"'
  tags: phpfpm, sites

- name: start php-fpm
  service:
    name: '{{ fpm_service }}'
    state: started
  tags: phpfpm
